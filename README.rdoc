= Templates
== TDD/BDD template for Rails 3.1.0 with Mongoid
=== Create application
  rails new <app_name> -m <path-to>/mongo-bdd-3.1.0.rb --skip-test-unit --skip-active-record --skip-bundle
=== Configuration
Guardfile
  guard 'spork', :cucumber_env => { 'RAILS_ENV' => 'test' }, :rspec_env => { 'RAILS_ENV' => 'test' } do
    watch('config/application.rb')
    watch('config/environment.rb')
    watch(%r{^config/environments/.+\.rb$})
    watch(%r{^config/initializers/.+\.rb$})
    watch('Gemfile')
    watch('Gemfile.lock')
    watch('spec/spec_helper.rb')
    watch('test/test_helper.rb')
    watch(%r{^spec/support/.+\.rb$})
  end

  guard 'rspec', :version => 2, :cli => "--drb" do
    watch(%r{^spec/.+_spec\.rb$})
    watch(%r{^lib/(.+)\.rb$})     { |m| "spec/lib/#{m[1]}_spec.rb" }
    watch('spec/spec_helper.rb')  { "spec" }

    # Rails example
    watch(%r{^spec/.+_spec\.rb$})
    watch(%r{^app/(.+)\.rb$})                           { |m| "spec/#{m[1]}_spec.rb" }
    watch(%r{^lib/(.+)\.rb$})                           { |m| "spec/lib/#{m[1]}_spec.rb" }
    watch(%r{^app/controllers/(.+)_(controller)\.rb$})  { |m| ["spec/routing/#{m[1]}_routing_spec.rb", "spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb", "spec/acceptance/#{m[1]}_spec.rb"] }
    watch(%r{^spec/support/(.+)\.rb$})                  { "spec" }
    watch('spec/spec_helper.rb')                        { "spec" }
    watch('config/routes.rb')                           { "spec/routing" }
    watch('app/controllers/application_controller.rb')  { "spec/controllers" }
    # Capybara request specs
    watch(%r{^app/views/(.+)/.*\.(erb|haml)$})          { |m| "spec/requests/#{m[1]}_spec.rb" }
  end
  
spec/spec_helper.rb
  require 'rubygems'
  require 'spork'
  
  Spork.prefork do
    ENV["RAILS_ENV"] ||= 'test'
    require File.expand_path("../../config/environment", __FILE__)
    require 'rspec/rails'
    require 'capybara/rspec'
    require 'database_cleaner'
    require "rails/mongoid"
    
    Spork.trap_class_method(Rails::Mongoid, :load_models)
    Spork.trap_method(Rails::Application::RoutesReloader, :reload!)
    
    Dir[Rails.root.join("spec/support/**/*.rb")].each {|f| require f}
    
    RSpec.configure do |config|
      config.mock_with :rspec
      
      config.before(:suite) do
        DatabaseCleaner.strategy = :truncation
        DatabaseCleaner.orm = "mongoid"
      end
      
      config.before(:each) do
        DatabaseCleaner.clean
      end
      
      config.include Mongoid::Matchers
    end
  end
  
  Spork.each_run do
    FactoryGirl.reload
  end

=== Start test suite in terminal from project root
  guard
